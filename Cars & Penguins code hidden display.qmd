---
title: "Using Code link & code fold for instructional purposes"
author: "Alberto"
format: 
  html:
    code-link: true
    code-fold: true
    self-contained: true
    embed-resources: true
    toc: true
    theme: Zephyr
    number-sections: true
knirt:
  opts_chunk: 
    warning: false 
    editor_options: 
    chunk_output_type: inline
editor: visual
---

# Quarto

Quarto enables you to weave together content and executable code into a finished document. The two functions to illustrate are `code-link` and `code-fold`.

## Eliminating warning when loading libraries

Use the option `#| warning: false`*.* The option `#| include: false` overrides *`code-link: true`* function

```{r}
#| label: loading library
#| warning: false
library(tidyverse)
```

## Code hidden & code display using the mpg dataset from the ggplot2 package

The download arrow Code displays the r functions. The code displays links the r functions to their corresponding websites. See its application in @fig-mile-displacement the scatterplot displaying mile displacement by mpg

```{r}
#| label: fig-mile-displacement
#| fig-cap: displacement-by-mpg
mtcars %>% 
  ggplot(aes(x = mpg, y = disp)) +
    geom_point()
```

# **Quarto Computations**

This dataset contains a subset of the fuel economy data from the EPA. Specifically, we use the `mpg` dataset from the **ggplot2** package.

The @fig-dispacement-by-cyl visualization below shows a positive, strong, and linear relationship between the city and highway mileage of `r nrow(mpg)` cars. Additionally, mileage is higher for cars with fewer cylinders.

```{r}
#| label: fig-dispacement-by-cyl
#| fig-cap: displacement-by-cyl

ggplot(mpg, aes(x = hwy, y = cty, color = cyl)) +
  geom_point(alpha = 0.5, size = 2) +
  scale_color_viridis_c() +
  theme_minimal()
```

# Using Penguins example

For this analysis we will use penguins data set from the [palmerpinguins](https://CRAN.R-project.org/package=palmerpenguins) package.

```{r}
#| label: load-packages

library(tidyverse)
library(ggthemes)
library(palmerpenguins)
library(gt)
library(downlit)
```

Describing data base corresponding to `r nrow(penguins)` across `r ncol(penguins)` characteritics such as species, island, gender, year of observation and body characteristics.

```{r}
#| label: Penguins glimps
glimpse(penguins)
```

## Species

@fig-bill-dims-species is a scatter plot of species of penguins

```{r}
#| label: fig-bill-dims-species
#| warning: false
#| fig-width: 8
#| fig-height: 5
#| fig-cap: |
#|   A scatterplot of penguins' bill depth and length, colored by
#|   species of penguins. 

ggplot(data = penguins,
       aes(x= bill_length_mm,
           y = bill_depth_mm,
           color = species,
           shape = species)) +
  geom_point() +
  scale_color_colorblind()+
  theme_minimal()+
  theme(legend.position ="top")+
  labs(x = "Bill length (mm)", y = "Bill depth (mm)")

```

## Penguins

@tbl-penguins-top10 shows the fist 10 penguins from the dataset with annotations

```{r}
#| label: tbl-penguins-top10
#| tbl-cap: First 10 pinquins.
library(tidyverse)
library(palmerpenguins)
library(dplyr)

penguins %>%
  slice_head(n=10) %>%
  select(species, island, bill_length_mm,bill_depth_mm) %>% 
  gt()
```

1.  Start with the penguins data frame
2.  Then slice the top ten rows
3.  Select some variable and make a table with gt()
