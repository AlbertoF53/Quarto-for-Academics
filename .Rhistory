weight_measurements %>%
left_join(four_penguins, join_by(samp_id))
weight_measurements %>%
left_join(four_penguins, join_by(samp_id), unmatched = "drop")
weight_measurements %>%
left_join(four_penguins, join_by(samp_id), unmatched = "drop")
weight_measurements %>%
left_join(four_penguins, join_by(samp_id), unmatched = "error")
weight_measurements %>%
left_join(four_penguins, join_by(samp_id), unmatched = "error")
penguins %>%
drop_na(sex, body_mass_g) %>%
group_by(species,sex) %>%
summarise(mean_bw = mean(body_mass_g)) %>%
ggplot(aes(x = species, y = mean_bw, fill = sex)) +
geom_col(position = "dodge")
penguins %>%
drop_na(sex, body_mass_g) %>%
group_by(species,sex) %>%
summarise(mean_bw = mean(body_mass_g)) %>%
slice_head(n = 1)
#|llabel: groups-downstream-effects
#*Example 1: persistence grouping, downstream effects
#*
penguins %>%
drop_na(sex, body_mass_g) %>%
group_by(species,sex) %>%
summarise(mean_bw = mean(body_mass_g)) %>%
slice_head(n = 1)
penguins %>%
drop_na(sex, body_mass_g) %>%
group_by(species,sex) %>%
summarise(mean_bw = mean(body_mass_g), .groups = "drop") %>%
slice_head(n = 1)
penguins %>%
drop_na(sex, body_mass_g) %>%
group_by(species, sex) %>%
summarise(mean_bw = mean(body_mass_g), .groups = "drop") %>%
slice_head(n = 1)
install.packages("gt")
penguins %>%
drop_na(sex, body_mass_g) %>%
group_by(species, sex) %>%
summarise(mean_bw = mean(body_mass_g)) %>%
gt::gt()
library(tidyverse)
library(palmerpenguins)
library(gt)
library(pkgload)
penguins %>%
drop_na(sex, body_mass_g) %>%
group_by(species, sex) %>%
summarise(mean_bw = mean(body_mass_g)) %>%
gt::gt()
penguins %>%
drop_na(sex, body_mass_g) %>%
group_by(species, sex) %>%
summarise(mean_bw = mean(body_mass_g), .groups = "drop") %>%
gt::gt()
penguins %>%
drop_na(sex, body_mass_g) %>%
group_by(species, sex) %>%
summarise(mean_bw = mean(body_mass_g)) %>%
gt::gt()
penguins %>%
drop_na(sex, body_mass_g) %>%
group_by(species, sex) %>%
summarise(mean_bw = mean(body_mass_g), .groups = "drop") %>%
gt::gt()
penguins %>%
drop_na(sex, body_mass_g) %>%
group_by(species, sex) %>%
summarise(mean_bw = mean(body_mass_g),
.groups = "drop")
penguins %>%
drop_na(sex, body_mass_g) %>%
group_by(species, sex) %>%
summarise(mean_bw = mean(body_mass_g),
.by = species)
penguins %>%
drop_na(sex, body_mass_g) %>%
summarise(mean_bw = mean(body_mass_g),
.by = species)
penguins %>%
drop_na(sex, body_mass_g) %>%
summarise(mean_bw = mean(body_mass_g),
.by = species, sex)
penguins %>%
drop_na(sex, body_mass_g) %>%
summarise(mean_bw = mean(body_mass_g),
.by = species,sex)
penguins %>%
drop_na(sex, body_mass_g) %>%
summarise(mean_bw = mean(body_mass_g),
.by = species,sex)
penguins %>%
drop_na(sex, body_mass_g) %>%
summarise(mean_bw = mean(body_mass_g),
.by = c(species, sex)
penguins %>%
penguins %>%
drop_na(sex, body_mass_g) %>%
summarise(
mean_bw = mean(body_mass_g),
.by = c(species, sex))
penguins %>%
reframe(bm_cat = quantile(body_mass_g, c(0.25,75),na.rm = TRUE))
enguins %>%
reframe(bm_cat = quantile(body_mass_g, c(0.25,75), na.rm = TRUE))
penguins %>%
reframe(bm_cat = quantile(body_mass_g, c(0.25,75), na.rm = TRUE))
summary(penguins$body_mass_g)
penguins %>%
reframe(bm_cat = quantile(body_mass_g, c(0.25,0.75), na.rm = TRUE))
penguins %>%
mutate(bm_cat = case_when(
is.na(body_mass_g) ~ NA,
body_mass_g < 3050 ~ "Small",
body_mass_g > 3050 & body_mass_g < 4202 ~ "Medium",
body_mass_g > 4202 ~ "Large"
))
penguins %>%
mutate(bm_cat = case_when(
is.na(body_mass_g) ~ NA,
body_mass_g < 3050 ~ "Small",
body_mass_g > 3050 & body_mass_g < 4202 ~ "Medium",
body_mass_g > 4202 ~ "Large"
))
penguins %>%
mutate(bm_cat = case_when(
is.na(body_mass_g) ~ NA,
body_mass_g < 3050 ~ "Small",
body_mass_g > 3050 & body_mass_g < 4202 ~ "Medium",
body_mass_g > 4202 ~ "Large"
),
count(bm_cat))
penguins %>%
mutate(bm_cat = case_when(
is.na(body_mass_g) ~ NA,
body_mass_g < 3050 ~ "Small",
body_mass_g > 3050 & body_mass_g < 4202 ~ "Medium",
body_mass_g > 4202 ~ "Large"
),
count())
test <- penguins %>%
mutate(bm_cat = case_when(
is.na(body_mass_g) ~ NA,
body_mass_g < 3050 ~ "Small",
body_mass_g > 3050 & body_mass_g < 4202 ~ "Medium",
body_mass_g > 4202 ~ "Large"))
count(test$bm_cat)
View(test)
rm(test)
penguins %>%
mutate(bm_cat = case_when(
is.na(body_mass_g) ~ NA,
body_mass_g < 3050 ~ "Small",
between(body_mass, 3050, 4202) ~ "Medium",
TRUE ~ "Large"
))
penguins %>%
mutate(bm_cat = case_when(
is.na(body_mass_g) ~ NA,
body_mass_g < 3050 ~ "Small",
between(body_mass_g, 3050, 4202) ~ "Medium",
TRUE ~ "Large"
))
penguins %>%
mutate(bm_cat = case_when(
is.na(body_mass_g) ~ NA,
body_mass_g < 3050 ~ "Small",
between(body_mass_g, 3050, 4202) ~ "Medium",
TRUE ~ "Large"
)) %>%
count()
penguins %>%
mutate(bm_cat = case_when(
is.na(body_mass_g) ~ NA,
body_mass_g < 3050 ~ "Small",
between(body_mass_g, 3050, 4202) ~ "Medium",
TRUE ~ "Large"
)) %>%
count(bm_cat)
penguins %>%
mutate(bm_cat = case_when(
is.na(body_mass_g) ~ NA,
body_mass_g < 3050 ~ "Small",
body_mass_g > 3050 & body_mass_g < 4202 ~ "Medium",
body_mass_g > 4202 ~ "Large"
)) %>%
cout(bm_cat)
penguins %>%
mutate(bm_cat = case_when(
is.na(body_mass_g) ~ NA,
body_mass_g < 3050 ~ "Small",
body_mass_g > 3050 & body_mass_g < 4202 ~ "Medium",
body_mass_g > 4202 ~ "Large"
)) %>%
count(bm_cat)
penguins %>%
mutate(bm_cat = case_when(
is.na(body_mass_g) ~ NA,
body_mass_g < 3050 ~ "Small",
between(body_mass_g, 3050, 4202) ~ "Medium",
TRUE ~ "Large"
)) %>%
count(bm_cat)
penguins %>%
reframe(bm_cat = quantile(body_mass_g, c(0.25,0.75), na.rm = TRUE))
penguins %>%
summary(body_mass_g)
summary(penguins$body_mass_g)
penguins %>%
mutate(bm_cat = case_when(
is.na(body_mass_g) ~ NA,
body_mass_g < 3550 ~ "Small",
between(body_mass_g, 3550, 4750) ~ "Medium",
TRUE ~ "Large"
)) %>%
count(bm_cat)
penguins %>%
mutate(bm_cat = case_when(
is.na(body_mass_g) ~ NA,
body_mass_g < 3550 ~ "Small",
body_mass_g > 3550 & body_mass_g < 4750 ~ "Medium",
body_mass_g > 4750 ~ "Large"
)) %>%
count(bm_cat)
penguins %>%
mutate(bm_cat = case_when(
is.na(body_mass_g) ~ NA,
body_mass_g < 3550 ~ "Small",
between(body_mass_g, 3550, 4750) ~ "Medium",
TRUE ~ "Large"
)) %>%
count(bm_cat)
penguins %>%
mutate(bm_cat = case_when(
is.na(body_mass_g) ~ NA,
body_mass_g < 3550 ~ "Small",
body_mass_g > 3550 & body_mass_g < 4750 ~ "Medium",
body_mass_g > 4750 ~ "Large"
)) %>%
count(bm_cat)
penguins
penguins %>%
mutate(bm_cat = case_when(
is.na(body_mass_g) ~ NA,
body_mass_g < 3550 ~ "Small",
body_mass_g > 3550 & body_mass_g < 4750 ~ "Medium",
body_mass_g > 4750 ~ "Large"
)) %>%
relocate(body_mass, before = body_mass_g)
penguins %>%
mutate(bm_cat = case_when(
is.na(body_mass_g) ~ NA,
body_mass_g < 3550 ~ "Small",
body_mass_g > 3550 & body_mass_g < 4750 ~ "Medium",
body_mass_g > 4750 ~ "Large"
)) %>%
relocate(body_mass_g, bm_cat) %>%
View()
?? relocate()
penguins
penguins %>%
mutate(bm_cat = case_when(
is.na(body_mass_g) ~ NA,
body_mass_g < 3550 ~ "Small",
body_mass_g > 3550 & body_mass_g < 4750 ~ "Medium",
body_mass_g > 4750 ~ "Large"
)) %>%
relocate(body_mass_g, bm_cat, after = island) %>%
View()
penguins
penguins %>%
mutate(bm_cat = case_when(
is.na(body_mass_g) ~ NA,
body_mass_g < 3550 ~ "Small",
body_mass_g > 3550 & body_mass_g < 4750 ~ "Medium",
body_mass_g > 4750 ~ "Large"
)) %>%
relocate(body_mass_g, bm_cat, .after = island) %>%
View()
penguins %>%
mutate(bm_cat = case_when(
is.na(body_mass_g) ~ NA,
body_mass_g < 3550 ~ "Small",
between(body_mass_g, 3550, 4750) ~ "Medium",
TRUE ~ "Large"
)) %>%
relocate(body_mass_g, bm_cat, .after = island) %>%
count(bm_cat)
penguins %>%
mutate(bm_cat = case_when(
is.na(body_mass_g) ~ NA,
body_mass_g < 3550 ~ "Small",
between(body_mass_g, 3550, 4750) ~ "Medium",
TRUE ~ "Large"
)) %>%
relocate(body_mass_g, bm_cat, .after = island)
penguins %>%
mutate(bm_cat = case_when(
is.na(body_mass_g) ~ NA,
body_mass_g < 3550 ~ "Small",
between(body_mass_g, 3550, 4750) ~ "Medium",
TRUE ~ "Large"
)) %>%
count()
penguins %>%
mutate(bm_cat = case_when(
is.na(body_mass_g) ~ NA,
body_mass_g < 3550 ~ "Small",
between(body_mass_g, 3550, 4750) ~ "Medium",
TRUE ~ "Large"
)) %>%
count(bm_cat)
penguins %>%
mutate(bm_cat = case_when(
is.na(body_mass_g) ~ NA,
body_mass_g < 3550 ~ "Small",
between(body_mass_g, 3550, 4750) ~ "Medium",
TRUE ~ "Large"
)) %>%
relocate(body_mass_g, bm_cat, .after = island)
enguins %>%
mutate(bm_unit = if_else(!is.na(body_mass_g), paste(body_mass_g, "g"),
NA_character_)) %>%
relocate(body_mass_g,bm_unit)
penguins %>%
mutate(bm_unit = if_else(!is.na(body_mass_g), paste(body_mass_g, "g"),
NA_character_)) %>%
relocate(body_mass_g,bm_unit)
penguins %>%
mutate(bm_unit = if_else(!is.na(body_mass_g), paste(body_mass_g, "g"),
NA_character_)) %>%
relocate(body_mass_g,bm_unit, .after = island)
penguins %>%
mutate(bm_unit = if_else(!is.na(body_mass_g), paste(body_mass_g, "g"),
NA)) %>%
relocate(body_mass_g,bm_unit, .after = island)
three_penguins_descriptions <- tribble(
~id, ~description
1, "Species: Adelie, Island - Torgersen",
three_penguins_descriptions <- tribble(
~id, ~description,
1, "Species: Adelie, Island - Torgersen",
2, "Species: Gentoo, Island - Biscoe",
3, "Species: Chinstrop, Island - Dream",
)
View(three_penguins_descriptions)
three_penguins_descriptions %>%
separate_wider_delim(
cols = description,
delim = ",",
names = c("species", "island")
)
View(three_penguins_descriptions)
three_penguins_descriptions %>%
separate_wider_regex(
cols = description,
patterns = c(
"Species: ", species = "[^,]+",
",",
"Island - ", island = ".*"
)
)
#| label: linewidth
penguins %>%
drop_na() %>%
ggplot(aes(x = flipper_length_mm, y = body_mass_g)) +
geom_smooth(size = 2)
#| label: linewidth
penguins %>%
drop_na() %>%
ggplot(aes(x = flipper_length_mm, y = body_mass_g)) +
geom_smooth(linewidth = 2)
#|label: join-unmatched
# data on four penguins, one row per samp_id
four_penguins <- tribble(
~samp_id, ~species, ~island,
1, "Adelie", "Torgersen",
2, "Gentoo", "Biscoe",
3, "Chinstrap", "Dream",
4, "Adelie", "Biscoe"
)
four_penguins
#Unmatched rows
weight_measurements %>%
left_join(four_penguins, join_by(samp_id))
#Option 1: with inner_join()
weight_measurements %>%
inner_join(four_penguins, join_by(samp_id))
#* The 4th penguin is dropped from the new merged dataset
#Option 2: with unmatched = drop
weight_measurements %>%
left_join(four_penguins, join_by(samp_id), unmatched = "drop")
#Option 3: do nothing at your own risk
weight_measurements %>%
left_join(four_penguins, join_by(samp_id))
#* Option 4: identify unmatched cases as error. Good starting place for the analysis
#* before deciding to drop the cases
weight_measurements %>%
left_join(four_penguins, join_by(samp_id), unmatched = "error")
weight_measurements %>%
left_join(four_penguins, join_by(samp_id), unmatched = "drop")
weight_measurements %>%
left_join(four_penguins, join_by(samp_id))
View(weight_measurements)
weight_measurements %>%
left_join(four_penguins, join_by(samp_id), unmatched = "error")
penguins %>%
reframe(bm_cat = quantile(body_mass_g, c(0.25,0.75), na.rm = TRUE))
penguins %>%
reframe(bm_cat = quantile(body_mass_g, c(0.25,0.75), na.rm = TRUE))
penguins %>%
mutate(bm_cat = case_when(
is.na(body_mass_g) ~ NA,
body_mass_g < 3550 ~ "Small",
body_mass_g > 3550 & body_mass_g < 4750 ~ "Medium",
body_mass_g > 4750 ~ "Large"
)) %>%
relocate(body_mass_g, bm_cat, .after = island) %>%
View()
#|label: case-when
#* Penguin quintiles
#penguins %>%
#reframe(bm_cat = quantile(body_mass_g, c(0.25,0.75), na.rm = TRUE))
#Or using summary
summary(penguins$body_mass_g)
#* Label penguins as Small, Medium, or Large based on quintile values
penguins %>%
mutate(bm_cat = case_when(
is.na(body_mass_g) ~ NA,
body_mass_g < 3550 ~ "Small",
body_mass_g > 3550 & body_mass_g < 4750 ~ "Medium",
body_mass_g > 4750 ~ "Large"
)) %>%
relocate(body_mass_g, bm_cat, .after = island) %>%
View()
count(bm_cat)
#|label: case-when
#* Penguin quintiles
#penguins %>%
#reframe(bm_cat = quantile(body_mass_g, c(0.25,0.75), na.rm = TRUE))
#Or using summary
summary(penguins$body_mass_g)
#* Label penguins as Small, Medium, or Large based on quintile values
penguins %>%
mutate(bm_cat = case_when(
is.na(body_mass_g) ~ NA,
body_mass_g < 3550 ~ "Small",
body_mass_g > 3550 & body_mass_g < 4750 ~ "Medium",
body_mass_g > 4750 ~ "Large"
)) %>%
relocate(body_mass_g, bm_cat, .after = island) %>%
View()
#Or
penguins %>%
mutate(bm_cat = case_when(
is.na(body_mass_g) ~ NA,
body_mass_g < 3550 ~ "Small",
between(body_mass_g, 3550, 4750) ~ "Medium",
TRUE ~ "Large"
)) %>%
count(bm_cat)
#To facilitate viewing use relocate to reoder the new variable
penguins %>%
mutate(bm_cat = case_when(
is.na(body_mass_g) ~ NA,
body_mass_g < 3550 ~ "Small",
between(body_mass_g, 3550, 4750) ~ "Medium",
TRUE ~ "Large"
)) %>%
relocate(body_mass_g, bm_cat, .after = island)
#| label: if_else
#Creating a character out of a numeric variable
penguins %>%
mutate(bm_unit = if_else(!is.na(body_mass_g), paste(body_mass_g, "g"),
NA_character_)) %>%
relocate(body_mass_g,bm_unit, .after = island)
#Use this simplified option
penguins %>%
mutate(bm_unit = if_else(!is.na(body_mass_g), paste(body_mass_g, "g"),
NA)) %>%
relocate(body_mass_g,bm_unit, .after = island)
#| label: separate
# Data on penguins, with text string descriptions
three_penguins_descriptions <- tribble(
~id, ~description,
1, "Species: Adelie, Island - Torgersen",
2, "Species: Gentoo, Island - Biscoe",
3, "Species: Chinstrop, Island - Dream",
)
three_penguins_descriptions
#separate wider_delim()
three_penguins_descriptions %>%
separate_wider_delim(
cols = description,
delim = ",",
names = c("species", "island")
)
#But the new approach also brings too much repeated information
# separate_wider_regex() -- if you are that sort of thing...
three_penguins_descriptions %>%
separate_wider_regex(
cols = description,
patterns = c(
"Species: ", species = "[^,]+",
",",
"Island - ", island = ".*"
)
)
